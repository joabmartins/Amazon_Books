{"timestamp":"2025-05-14T19:56:42.138194","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T19:56:42.138817","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/teste.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T19:56:42.287530Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:42.288133Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:42.288786Z","level":"info","event":"Current task name:fetch_book_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:42.289129Z","level":"info","event":"Dag name:connection_test","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:42.289430Z","level":"info","event":"n√∫meros livros","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:42.289727Z","level":"info","event":"100","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:43.752417Z","level":"info","event":"resposta...............","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:43.753289Z","level":"info","event":"200","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:43.753941Z","level":"info","event":"<Response [200]>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:43.754433Z","level":"info","event":".......................","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:44.933352Z","level":"info","event":"resposta...............","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:44.934032Z","level":"info","event":"200","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:44.934576Z","level":"info","event":"<Response [200]>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:44.935025Z","level":"info","event":".......................","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:49.214086Z","level":"info","event":"resposta...............","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:49.214621Z","level":"info","event":"200","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:49.214964Z","level":"info","event":"<Response [200]>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:49.215286Z","level":"info","event":".......................","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:52.733775Z","level":"info","event":"tamanho array","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:52.734405Z","level":"info","event":"101","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:52.743109","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-14T19:56:52.796869Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:52.797933Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:52.798353Z","level":"info","event":"Task operator:<Task(PythonOperator): fetch_book_data>","chan":"stdout","logger":"task"}
