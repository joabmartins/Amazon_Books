{"timestamp":"2025-05-14T19:56:54.162331","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T19:56:54.163310","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/teste.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T19:56:54.398256Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.398904Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.399462Z","level":"info","event":"Current task name:create_table","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.399812Z","level":"info","event":"Dag name:connection_test","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.327532","level":"info","event":"Executing: \n     CREATE TABLE IF NOT EXISTS books_ml (\n          id SERIAL PRIMARY KEY,\n          title TEXT NOT NULL,\n          price TEXT)\n     ","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-05-14T19:56:54.329670","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-14T19:56:54.398653","level":"info","event":"Connection Retrieved 'books_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-14T19:56:54.399618","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-14T19:56:54.408904","level":"info","event":"Connection Retrieved 'books_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-14T19:56:54.413418","level":"info","event":"Running statement: \n     CREATE TABLE IF NOT EXISTS books_ml (\n          id SERIAL PRIMARY KEY,\n          title TEXT NOT NULL,\n          price TEXT)\n     , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-05-14T19:56:54.447674Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.448396Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:56:54.449103Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): create_table>","chan":"stdout","logger":"task"}
