{"timestamp":"2025-05-14T19:43:14.346260","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T19:43:14.346895","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/teste.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T19:43:14.491029Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.491527Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.492068Z","level":"info","event":"Current task name:create_table","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.492389Z","level":"info","event":"Dag name:connection_test","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.463364","level":"info","event":"Executing: \n     CREATE TABLE IF NOT EXISTS books_ml (\n          id SERIAL PRIMARY KEY,\n          title TEXT NOT NULL,\n          price TEXT)\n     ","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-05-14T19:43:14.465251","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-14T19:43:14.491304","level":"info","event":"Connection Retrieved 'books_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-14T19:43:14.492083","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-14T19:43:14.500748","level":"info","event":"Connection Retrieved 'books_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-14T19:43:14.504320","level":"info","event":"Running statement: \n     CREATE TABLE IF NOT EXISTS books_ml (\n          id SERIAL PRIMARY KEY,\n          title TEXT NOT NULL,\n          price TEXT)\n     , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-05-14T19:43:14.553843Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.554320Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T19:43:14.554700Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): create_table>","chan":"stdout","logger":"task"}
